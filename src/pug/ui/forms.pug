include ../layouts/_mixins-links.pug
block variables

<!DOCTYPE html>
html(lang="ru")
	head
		meta(charset="UTF-8")
		meta(name="viewport", content="width=device-width, initial-scale=1.0")
		meta(http-equiv="X-UA-Compatible", content="ie=edge")

		//====убрать синий цвет у ссылок в сафари ========
		meta(name="format-detection" content="telephone=no")
		link(rel="stylesheet", href="../css/main.css")
		title UI-KIT

	body.body-dashboard

		include ui-navigation.pug

		block content
			.container-dashboard
				h2 FORM COMPONENTS

				.container-dashboard__content(style="background: lightgreen;")
					h3 Кастомный select
					.custom-select.round-select
						button.custom-select-trigger
							span Moskow
						.custom-options
							span.custom-option(data-value='Санкт-Петербург') Санкт-Петербург
							span.custom-option(data-value='Москва') Москва
							span.custom-option(data-value='Нижний Новгород') Нижний Новгород
							span.custom-option(data-value='Самара') Самара

	script.
		/*========CUSTOM SELECT======= */
		const customSelects = document.querySelectorAll('.custom-select');

		customSelects.forEach((customSelect) => {
			const selectTrigger = customSelect.querySelector('.custom-select-trigger');
			const optionsContainer = customSelect.querySelector('.custom-options');
			const optionsList = customSelect.querySelectorAll('.custom-option');

			// Toggle options dropdown
			selectTrigger.addEventListener('click', function (e) {
				e.stopPropagation(); // Останавливаем распространение события
				const isOpen = customSelect.classList.contains('open');
				closeAllSelects();
				if (!isOpen) {
					customSelect.classList.add('open');
					optionsContainer.style.maxHeight = optionsContainer.scrollHeight + 'px';
				} else {
					optionsContainer.style.maxHeight = '0';
				}
			});

			// Update selected option
			optionsList.forEach((option) => {
				option.addEventListener('click', function () {
					selectTrigger.textContent = option.textContent;
					selectTrigger.dataset.value = option.dataset.value;
					customSelect.classList.remove('open');
					optionsContainer.style.maxHeight = '0';
				});
			});
		});

		// Close dropdown if clicked outside
		document.addEventListener('click', function () {
			closeAllSelects();
		});

		function closeAllSelects() {
			customSelects.forEach((select) => {
				select.classList.remove('open');
				const optionsContainer = select.querySelector('.custom-options');
				if (optionsContainer) {
					optionsContainer.style.maxHeight = '0';
				}
			});
		}